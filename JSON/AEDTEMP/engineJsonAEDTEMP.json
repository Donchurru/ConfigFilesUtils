{
	"steps": [
		{
			"beforeAll": [
				{
					"type": "PlainSql",
					"sql": "CREATE TEMPORARY TABLE AEDTEMP USING com.databricks.spark.csv OPTIONS (path \"${basePath}AEDTEMP.csv\", header \"true\", inferSchema \"false\")"
				}
			],
			"source": {
				"sql": "select * from AEDTEMP"
			},
			"actorsConfig": [
				{
					"type": "Validation",
					"validations": [
						{
							"type": "Mandatory",
							"fieldName": "USR_GEST"
						},
						{
							"type": "Mandatory",
							"fieldName": "NUM_CANT_ANIO_ACT_EMP"
						},
						{
							"type": "Mandatory",
							"fieldName": "NUM_CANT_EMP_PER"
						},
						{
							"type": "Mandatory",
							"fieldName": "NUM_NOM_DISP"
						}
					]
				},
				{
					"type": "Standardization",
					"standardizations": [
						{
							"type": "Concat",
							"sourceField": "COD_SUB_SEGMT_ORIG",
							"targetField": "COD_SUB_SEGMT",
							"metadata": {
								"mask": "concat('AE-SUBSEG-',COD_CAPITAL)"
							}
						}
					]
				}
			],
			"target": {
				"resultsAlias": "AEDTEMP_standardized_and_validated",
				"errorsAlias": "errors_AEDTEMP_standardized_and_validated"
			},
			"afterAll": []
		},
		{
			"beforeAll": [
				{
					"type": "PlainSql",
					"sql": "CREATE TEMPORARY TABLE HE1_MX_CAT_ENT_FINAN_DRO USING com.databricks.spark.csv OPTIONS (path \"${basePathDomain}HE1_MX_CAT_ENT_FINAN_DRO.csv\", header \"true\", inferSchema \"false\")"
				}
			],
			"source": {
				"sql": "Select base.*, ref.COD_ENT REFERENCED_COD_ENT from AEDTEMP_standardized_and_validated base left outer join HE1_MX_CAT_ENT_FINAN_DRO ref on (base.COD_ENT = ref.COD_ENT and base.FCH_CORTE_DATOS = ref.FCH_CORTE_DATOS and base.NUM_VER_PROC = ref.NUM_VER_PROC)"
			},
			"actorsConfig": [
				{
					"type": "Validation",
					"validations": [
						{
							"type": "Mandatory",
							"fieldName": "REFERENCED_COD_ENT",
							"metadata": {
								"referenceTable": "HE1_MX_CAT_ENT_FINAN_DRO"
							}
						}
					]
				}
			],
			"target": {
				"resultsAlias": "AEDTEMP_standardized_validated_and_domain_temp0",
				"errorsAlias": "errors_AEDTEMP_standardized_and_validated_and_domain0"
			},
			"afterAll": []
		},
		{
			"beforeAll": [
				{
					"type": "PlainSql",
					"sql": "CREATE TEMPORARY TABLE HE1_MX_CAT_INTERNO_DRO USING com.databricks.spark.csv OPTIONS (path \"${basePathDomain}HE1_MX_CAT_INTERNO_DRO.csv\", header \"true\", inferSchema \"false\")"
				}
			],
			"source": {
				"sql": "Select base.*, ref.COD_CVE_RGTRO REFERENCED_COD_CVE_RGTRO from AEDTEMP_standardized_validated_and_domain_temp0 base left outer join HE1_MX_CAT_INTERNO_DRO ref on (base.FCH_CORTE_DATOS = ref.FCH_CORTE_DATOS and base.NUM_VER_PROC = ref.NUM_VER_PROC and base.COD_TIPO_PER_GPO = ref.COD_CVE_RGTRO) where ref.COD_CATALOGO = '0016'"
			},
			"actorsConfig": [
				{
					"type": "Validation",
					"validations": [
						{
							"type": "Mandatory",
							"fieldName": "REFERENCED_COD_CVE_RGTRO",
							"metadata": {
								"referenceTable": "HE1_MX_CAT_INTERNO_DRO"
							}
						}
					]
				}
			],
			"target": {
				"resultsAlias": "AEDTEMP_standardized_validated_and_domain_temp1",
				"errorsAlias": "errors_AEDTEMP_standardized_and_validated_and_domain1"
			},
			"afterAll": []
		},
		{
			"beforeAll": [
				{
					"type": "PlainSql",
					"sql": "CREATE TEMPORARY TABLE HE1_MX_CAT_INF_GPOS_DRO USING com.databricks.spark.csv OPTIONS (path \"${basePathDomain}HE1_MX_CAT_INF_GPOS_DRO.csv\", header \"true\", inferSchema \"false\")"
				}
			],
			"source": {
				"sql": "Select base.*, ref.COD_GPO_ECON REFERENCED_COD_GPO_ECON from AEDTEMP_standardized_validated_and_domain_temp1 base left outer join HE1_MX_CAT_INF_GPOS_DRO ref on (base.COD_ENT=ref.COD_ENT and base.COD_PER_GPO=ref.COD_GPO_ECON and base.NUM_VER_PROC=ref.NUM_VER_PROC and base.FCH_CORTE_DATOS=ref.FCH_CORTE_DATOS) where ref.COD_TIPO_PER_GPO='G'"
			},
			"actorsConfig": [
				{
					"type": "Validation",
					"validations": [
						{
							"type": "Mandatory",
							"fieldName": "REFERENCED_COD_GPO_ECON",
							"metadata": {
								"referenceTable": "HE1_MX_CAT_INF_GPOS_DRO"
							}
						}
					]
				}
			],
			"target": {
				"resultsAlias": "AEDTEMP_standardized_validated_and_domain_temp2",
				"errorsAlias": "errors_AEDTEMP_standardized_and_validated_and_domain2"
			},
			"afterAll": []
		},
		{
			"beforeAll": [
				{
					"type": "PlainSql",
					"sql": "CREATE TEMPORARY TABLE HE1_MX_MAE_PERSONAS_DRO USING com.databricks.spark.csv OPTIONS (path \"${basePathDomain}HE1_MX_MAE_PERSONAS_DRO.csv\", header \"true\", inferSchema \"false\")"
				}
			],
			"source": {
				"sql": "Select base.*, ref.COD_PER REFERENCED_COD_PER from AEDTEMP_standardized_validated_and_domain_temp2 base left outer join HE1_MX_MAE_PERSONAS_DRO ref on (base.COD_ENT=ref.COD_ENT and base.COD_PER_GPO=ref.COD_PER and base.NUM_VER_PROC=ref.NUM_VER_PROC and base.FCH_CORTE_DATOS=ref.FCH_CORTE_DATOS) where ref.COD_TIPO_PER_GPO='P'"
			},
			"actorsConfig": [
				{
					"type": "Validation",
					"validations": [
						{
							"type": "Mandatory",
							"fieldName": "REFERENCED_COD_PER",
							"metadata": {
								"referenceTable": "HE1_MX_MAE_PERSONAS_DRO"
							}
						}
					]
				}
			],
			"target": {
				"resultsAlias": "AEDTEMP_standardized_validated_and_domain_temp3",
				"errorsAlias": "errors_AEDTEMP_standardized_and_validated_and_domain3"
			},
			"afterAll": []
		},
		{
			"beforeAll": [
				{
					"type": "PlainSql",
					"sql": "CREATE TEMPORARY TABLE HE1_MX_CAT_CENTROS_OPER_DRO USING com.databricks.spark.csv OPTIONS (path \"${basePathDomain}HE1_MX_CAT_CENTROS_OPER_DRO.csv\", header \"true\", inferSchema \"false\")"
				}
			],
			"source": {
				"sql": "Select base.*, ref.COD_CENTRO REFERENCED_COD_CENTRO from AEDTEMP_standardized_validated_and_domain_temp3 base left outer join HE1_MX_CAT_CENTROS_OPER_DRO ref on (base.COD_ENT=ref.COD_ENT and base.COD_SUC=ref.COD_CENTRO and base.NUM_VER_PROC=ref.NUM_VER_PROC and base.FCH_CORTE_DATOS=ref.FCH_CORTE_DATOS)"
			},
			"actorsConfig": [
				{
					"type": "Validation",
					"validations": [
						{
							"type": "Mandatory",
							"fieldName": "REFERENCED_COD_CENTRO",
							"metadata": {
								"referenceTable": "HE1_MX_CAT_CENTROS_OPER_DRO"
							}
						}
					]
				}
			],
			"target": {
				"resultsAlias": "AEDTEMP_standardized_validated_and_domain_temp4",
				"errorsAlias": "errors_AEDTEMP_standardized_and_validated_and_domain4"
			},
			"afterAll": []
		},
		{
			"beforeAll": [
				{
					"type": "PlainSql",
					"sql": "CREATE TEMPORARY TABLE HE1_MX_CAT_TAB_CORP_ALTAIR_DRO USING com.databricks.spark.csv OPTIONS (path \"${basePathDomain}HE1_MX_CAT_TAB_CORP_ALTAIR_DRO.csv\", header \"true\", inferSchema \"false\")"
				}
			],
			"source": {
				"sql": "Select base.*, ref.COD_CVE_REG REFERENCED_COD_CVE_REG from AEDTEMP_standardized_validated_and_domain_temp4 base left outer join HE1_MX_CAT_TAB_CORP_ALTAIR_DRO ref on (base.COD_ENT=ref.COD_ENT and base.COD_ACT_ESP_ORIG=ref.COD_CVE_REG and base.NUM_VER_PROC=ref.NUM_VER_PROC and base.FCH_CORTE_DATOS=ref.FCH_CORTE_DATOS) where ref.COD_SIGLA_IDIOMA='E' and ref.COD_TAB_GEN='0304'"
			},
			"actorsConfig": [
				{
					"type": "Validation",
					"validations": [
						{
							"type": "Mandatory",
							"fieldName": "REFERENCED_COD_CVE_REG",
							"metadata": {
								"referenceTable": "HE1_MX_CAT_TAB_CORP_ALTAIR_DRO"
							}
						}
					]
				}
			],
			"target": {
				"resultsAlias": "AEDTEMP_standardized_validated_and_domain_temp5",
				"errorsAlias": "errors_AEDTEMP_standardized_and_validated_and_domain5"
			},
			"afterAll": []
		},
		{
			"beforeAll": [
				{
					"type": "PlainSql",
					"sql": "CREATE TEMPORARY TABLE HE1_MX_CAT_TAB_CORP_ALTAIR_DRO USING com.databricks.spark.csv OPTIONS (path \"${basePathDomain}HE1_MX_CAT_TAB_CORP_ALTAIR_DRO.csv\", header \"true\", inferSchema \"false\")"
				}
			],
			"source": {
				"sql": "Select base.*, ref.COD_CVE_REG REFERENCED_COD_CVE_REG from AEDTEMP_standardized_validated_and_domain_temp5 base left outer join HE1_MX_CAT_TAB_CORP_ALTAIR_DRO ref on (base.COD_ENT=ref.COD_ENT and base.COD_SEGMT_ORIG=ref.COD_CVE_REG and base.NUM_VER_PROC=ref.NUM_VER_PROC and base.FCH_CORTE_DATOS=ref.FCH_CORTE_DATOS) where ref.COD_SIGLA_IDIOMA='E' and ref.COD_TAB_GEN='0232'"
			},
			"actorsConfig": [
				{
					"type": "Validation",
					"validations": [
						{
							"type": "Mandatory",
							"fieldName": "REFERENCED_COD_CVE_REG",
							"metadata": {
								"referenceTable": "HE1_MX_CAT_TAB_CORP_ALTAIR_DRO"
							}
						}
					]
				}
			],
			"target": {
				"resultsAlias": "AEDTEMP_standardized_validated_and_domain_temp6",
				"errorsAlias": "errors_AEDTEMP_standardized_and_validated_and_domain6"
			},
			"afterAll": []
		},
		{
			"beforeAll": [
				{
					"type": "PlainSql",
					"sql": "CREATE TEMPORARY TABLE HE1_MX_CAT_INTERNO_DRO USING com.databricks.spark.csv OPTIONS (path \"${basePathDomain}HE1_MX_CAT_INTERNO_DRO.csv\", header \"true\", inferSchema \"false\")"
				}
			],
			"source": {
				"sql": "Select base.*, ref.COD_CVE_RGTRO REFERENCED_COD_CVE_RGTRO from AEDTEMP_standardized_validated_and_domain_temp6 base left outer join HE1_MX_CAT_INTERNO_DRO ref on (base.COD_ACT_ESP=ref.COD_CVE_RGTRO and base.NUM_VER_PROC=ref.NUM_VER_PROC and base.FCH_CORTE_DATOS=ref.FCH_CORTE_DATOS) where ref.COD_CATALOGO='0001'"
			},
			"actorsConfig": [
				{
					"type": "Validation",
					"validations": [
						{
							"type": "Mandatory",
							"fieldName": "REFERENCED_COD_CVE_RGTRO",
							"metadata": {
								"referenceTable": "HE1_MX_CAT_INTERNO_DRO"
							}
						}
					]
				}
			],
			"target": {
				"resultsAlias": "AEDTEMP_standardized_validated_and_domain_temp7",
				"errorsAlias": "errors_AEDTEMP_standardized_and_validated_and_domain7"
			},
			"afterAll": []
		},
		{
			"beforeAll": [
				{
					"type": "PlainSql",
					"sql": "CREATE TEMPORARY TABLE HE1_MX_CAT_INTERNO_DRO USING com.databricks.spark.csv OPTIONS (path \"${basePathDomain}HE1_MX_CAT_INTERNO_DRO.csv\", header \"true\", inferSchema \"false\")"
				}
			],
			"source": {
				"sql": "Select base.*, ref.COD_CVE_RGTRO REFERENCED_COD_CVE_RGTRO from AEDTEMP_standardized_validated_and_domain_temp7 base left outer join HE1_MX_CAT_INTERNO_DRO ref on (base.COD_SEGMT=ref.COD_CVE_RGTRO and base.NUM_VER_PROC=ref.NUM_VER_PROC and base.FCH_CORTE_DATOS=ref.FCH_CORTE_DATOS) where ref.COD_CATALOGO='0019'"
			},
			"actorsConfig": [
				{
					"type": "Validation",
					"validations": [
						{
							"type": "Mandatory",
							"fieldName": "REFERENCED_COD_CVE_RGTRO",
							"metadata": {
								"referenceTable": "HE1_MX_CAT_INTERNO_DRO"
							}
						}
					]
				}
			],
			"target": {
				"resultsAlias": "AEDTEMP_standardized_validated_and_domain_temp8",
				"errorsAlias": "errors_AEDTEMP_standardized_and_validated_and_domain8"
			},
			"afterAll": []
		},
		{
			"beforeAll": [
				{
					"type": "PlainSql",
					"sql": "CREATE TEMPORARY TABLE HE1_MX_CAT_TAB_CORP_ALTAIR_DRO USING com.databricks.spark.csv OPTIONS (path \"${basePathDomain}HE1_MX_CAT_TAB_CORP_ALTAIR_DRO.csv\", header \"true\", inferSchema \"false\")"
				}
			],
			"source": {
				"sql": "Select base.*, ref.COD_CVE_REG REFERENCED_COD_CVE_REG from AEDTEMP_standardized_validated_and_domain_temp8 base left outer join HE1_MX_CAT_TAB_CORP_ALTAIR_DRO ref on (base.COD_ENT=ref.COD_ENT and base.COD_SUB_SEGMT=ref.COD_CVE_REG and base.NUM_VER_PROC=ref.NUM_VER_PROC and base.FCH_CORTE_DATOS=ref.FCH_CORTE_DATOS) where ref.COD_SIGLA_IDIOMA='E' and ref.COD_TAB_GEN='1193'"
			},
			"actorsConfig": [
				{
					"type": "Validation",
					"validations": [
						{
							"type": "Mandatory",
							"fieldName": "REFERENCED_COD_CVE_REG",
							"metadata": {
								"referenceTable": "HE1_MX_CAT_TAB_CORP_ALTAIR_DRO"
							}
						}
					]
				}
			],
			"target": {
				"resultsAlias": "AEDTEMP_standardized_validated_and_domain_temp9",
				"errorsAlias": "errors_AEDTEMP_standardized_and_validated_and_domain9"
			},
			"afterAll": [
				{
					"type": "TempTable",
					"tableName": "AEDTEMP_domain_validated",
					"sql": "select * from AEDTEMP_standardized_validated_and_domain_temp9"
				},
				{
					"type": "TempTable",
					"tableName": "AEDTEMP_errors",
					"sql": "select * from errors_AEDTEMP_standardized_and_validated union all select * from errors_AEDTEMP_standardized_and_validated_and_domain0 union all select * from errors_AEDTEMP_standardized_and_validated_and_domain1 union all select * from errors_AEDTEMP_standardized_and_validated_and_domain2 union all select * from errors_AEDTEMP_standardized_and_validated_and_domain3 union all select * from errors_AEDTEMP_standardized_and_validated_and_domain4 union all select * from errors_AEDTEMP_standardized_and_validated_and_domain5 union all select * from errors_AEDTEMP_standardized_and_validated_and_domain6 union all select * from errors_AEDTEMP_standardized_and_validated_and_domain7 union all select * from errors_AEDTEMP_standardized_and_validated_and_domain8 union all select * from errors_AEDTEMP_standardized_and_validated_and_domain9"
				}
			]
		}
	]
}
